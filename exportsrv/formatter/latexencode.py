# -*- coding: utf-8 -*-
#
# The MIT License (MIT)
#
# Copyright (c) 2015 Philippe Faist
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

"""
The `latexencode` module provides a single function, :py:func:`utf8tolatex()` which
allows you to convert a unicode string to LaTeX escape sequences.


Fetched from https://github.com/phfaist/pylatexenc on 8/7/2018
"""

from __future__ import print_function #, absolute_import

import unicodedata
import logging
import sys

if sys.version_info.major > 2:
    def unicode(string): return string
    basestring = str

log = logging.getLogger(__name__)


#
# CHARACTER MAP TAKEN FROM latexcodec 0.2, by Peter Troeger
#    https://pypi.python.org/pypi/latexcodec
#
#
# latexcodec is a lexer and codec to work with LaTeX code in Python
# Copyright (c) 2011-2014 by Matthias C. M. Troffaes
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#

# generated by genmapping.py    ### PhF: ... and edited manually by myself
utf82latex={
# ------------------- U+0000 — U+001F control characters -------------------
#0-31: unrecognizable characters
# ------------------- U+0020 — U+007F Basic Latin -------------------
#32: character space
#33: character !
34:"''", 	# character "
35:'\\#', 	# character #
36:'\\$', 	# character $
37:'\\%', 	# character %
38:'\\&', 	# character &
#39: character '
#40: character (
#41: character )
#42: character *
#43: character +
#44: character ,
#45: character -
#46: character .
#47: character /
#48-57: characters 0-9
#58: character :
#59: character ;
#60: character <
#61: character =
#62: character >
#63: character ?
#64: character @
#65-90: characters A-Z
#91: character [
92:'\\textbackslash', # the \ character itself
#93: ]
94:'\\^', # character ^
95:'\\_', 	# character _
#96: character `
#97-122: characters a-z
123:'\\{', 	# character {
#124: character |
125:'\\}', 	# character }
126:'\\raisebox{-0.5ex}\\textasciitilde', # character ~
#127: unrecognizable character
# ------------------- U+0080 — U+00FF Latin-1 Supplement -------------------
#128-160: unrecognizable characters
161:'\\textexclamdown', 	# character ¡
162:'\\textcent', 	# character ¢
163:'\\textsterling', 	# character £
164:'\\textcurrency', 	# character €
165:'\\textyen', 	# character ¥
166:'\\textbrokenbar', 	# character Š
167:'\\textsection', 	# character §
168:'\\textasciidieresis', 	# character š
169:'\\textcopyright', 	# character ©
170:'\\textordfeminine', 	# character ª
171:'\\guillemotleft', 	# character «
172:'\\textlnot', 	# character ¬
#173: character ­ (soft hyphen)
174:'\\textregistered', 	# character ®
175:'\\textasciimacron', 	# character ¯
176:'\\textdegree', 	# character °
177:'\\ensuremath{\\pm}', 	# character ±
178:'\\texttwosuperior', 	# character ²
179:'\\textthreesuperior', 	# character ³
180:'\\textasciiacute', 	# character Ž
181:'\\textmu', 	# character µ
182:'\\textparagraph', 	# character ¶
183:'\\textperiodcentered', 	# character ·
#184: character ¸ (Cedilla)
185:'\\textonesuperior', 	# character ¹
186:'\\textordmasculine', 	# character º
187:'\\guillemotright', 	# character »
188:'\\textonequarter', 	# character Œ
189:'\\textonehalf', 	# character œ
190:'\\textthreequarters', 	# character Ÿ
191:'\\textquestiondown', 	# character ¿
192:'\\`A', 	# character À
193:"\\'A", 	# character Á
194:'\\^A', 	# character Â
195:'\\~A', 	# character Ã
196:'\\"A', 	# character Ä
197:'\\r{A}', 	# character Å
198:'\\AE', 	# character Æ
199:'\\c{C}', 	# character Ç
200:'\\`E', 	# character È
201:"\\'E", 	# character É
202:'\\^E', 	# character Ê
203:'\\"E', 	# character Ë
204:'\\`I', 	# character Ì
205:"\\'I", 	# character Í
206:'\\^I', 	# character Î
207:'\\"I', 	# character Ï
208:'\\DH', 	# character Ð
209:'\\~N', 	# character Ñ
210:'\\`O', 	# character Ò
211:"\\'O", 	# character Ó
212:'\\^O', 	# character Ô
213:'\\~O', 	# character Õ
214:'\\"O', 	# character Ö
215:'\\texttimes', 	# character ×
216:'\\O', 	    # character Ø
217:'\\`U', 	# character Ù
218:"\\'U", 	# character Ú
219:'\\^U', 	# character Û
220:'\\"U', 	# character Ü
221:"\\'Y", 	# character Ý
222:'\\TH', 	# character Þ
223:'\\ss', 	# character ß
224:'\\`a', 	# character à
225:"\\'a", 	# character á
226:'\\^a', 	# character â
227:'\\~a', 	# character ã
228:'\\"a', 	# character ä
229:'\\r{a}', 	# character å
230:'\\ae', 	# character æ
231:'\\c{c}', 	# character ç
232:'\\`e', 	# character è
233:"\\'e", 	# character é
234:'\\^e', 	# character ê
235:'\\"e', 	# character ë
236:'\\`\\i', 	# character ì
237:"\\'\\i", 	# character í
238:'\\^\\i', 	# character î
239:'\\"\\i', 	# character ï
240:'\\dh', 	# character ð
241:'\\~n', 	# character ñ
242:'\\`o', 	# character ò
243:"\\'o", 	# character ó
244:'\\^o', 	# character ô
245:'\\~o', 	# character õ
246:'\\"o', 	# character ö
247:'\\textdiv', 	# character ÷
248:'\\o', 	    # character ø
249:'\\`u', 	# character ù
250:"\\'u", 	# character ú
251:'\\^u', 	# character û
252:'\\"u', 	# character ü
253:"\\'y", 	# character ý
254:'\\th', 	# character þ
255:'\\"y', 	# character ÿ
# ------------------- U+0100 — U+017F Latin Extended-A -------------------
256:'\\={A}',   # character Ā
257:'\\={a}',   # character ā
258:'\\u{A}',   # character Ă
259:'\\u{a}',   # character ă
260:'\\k{A}',   # character Ą
261:'\\k{a}',   # character ą
262:"\\'C",     # character Ć
263:"\\'c",     # character ć
264:'\\^{C}',   # character Ĉ
265:'\\^{c}',   # character ĉ
266:'\\.{C}',   # character Ċ
267:'\\.{c}',   # character ċ
268:'\\v{C}',   # character Č
269:'\\v{c}',   # character č
270:'\\v{D}',   # character Ď
271:'\\v{d}',   # character ď
272:'\\DJ',     # character Đ
273:'\\dj',     # character đ
274:'\\={E}',   # character Ē
275:'\\={e}',   # character ē
276:'\\u{E}',   # character Ĕ
277:'\\u{e}',   # character ĕ
278:'\\.{E}',   # character Ė
279:'\\.{e}',   # character ė
280:'\\k{E}',   # character Ę
281:'\\k{e}',   # character ę
282:'\\v{E}',   # character Ě
283:'\\v{e}',   # character ě
284:'\\^{G}',   # character Ĝ
285:'\\^{g}',   # character ĝ
286:'\\u{G}',   # character Ğ
287:'\\u{g}',   # character ğ
288:'\\.{G}',   # character Ġ
289:'\\.{g}',   # character ġ
290:'\\c{G}',   # character Ģ
291:'\\c{g}',   # character ģ
292:'\\^{H}',   # character Ĥ
293:'\\^{h}',   # character ĥ
294:'\\={H}',   # character Ħ
295:'\\={h}',   # character ħ
296:'\\~{I}',   # character Ĩ
297:'\\~{i}',   # character ĩ
298:'\\={I}',   # character Ī
299:'\\={\\i}',   # character ī
300:'\\u{I}',   # character Ĭ
301:'\\u{i}',   # character ĭ
302:'\\k{I}',   # character Į
303:'\\k{i}',   # character į
304:'\\.I',     # character İ
305:'\\i',      # character ı
306:'\\IJ',     # character Ĳ
307:'\\ij',     # character ĳ
308:'\\^{J}',   # character Ĵ
309:'\\^{j}',   # character ĵ
310:'\\c{K}',   # character Ķ
311:'\\c{k}',   # character ķ
312:'\\textsc\{k\}',    # character ĸ
313:"\\'L",     # character Ĺ
314:"\\'l",     # character ĺ
315:'\\c{L}',   # character Ļ
316:'\\c{l}',   # character ļ
317:'\\v{L}',   # character Ľ
318:'\\v{l}',   # character ľ
319:'\\.{L}',   # character Ŀ
320:'\\.{l}',   # character ŀ
321:'\\L',      # character Ł
322:'\\l',      # character ł
323:"\\'N",     # character Ń
324:"\\'n",     # character ń
325:'\\c{N}',   # character Ņ
326:'\\c{n}',   # character ņ
327:'\\v{N}',   # character Ň
328:'\\v{n}',   # character ň
329:'\\\'n',    # character ŉ
330:'\\NG',     # character Ŋ
331:'\\ng',     # character ŋ
332:'\\={O}',   # character Ō
333:'\\={o}',   # character ō
334:'\\u{O}',   # character Ŏ
335:'\\u{o}',   # character ŏ
336:'\\H{O}',   # character Ő
337:'\\H{o}',   # character ő
338:'\\OE',     # character Œ
339:'\\oe',     # character œ
340:"\\'R",     # character Ŕ
341:"\\'r",     # character ŕ
342:'\\c{R}',   # character Ŗ
343:'\\c{r}',   # character ŗ
344:'\\v{R}',   # character Ř
345:'\\v{r}',   # character ř
346:"\\'S",     # character Ś
347:"\\'s",     # character ś
348:'\\^{S}',   # character Ŝ
349:'\\^{s}',   # character ŝ
350:'\\c{S}',   # character Ş
351:'\\c{s}',   # character ş
352:'\\v{S}',   # character Š
353:'\\v{s}',   # character š
354:'\\c{T}',   # character Ţ
355:'\\c{t}',   # character ţ
356:'\\v{T}',   # character Ť
357:'\\v{t}',   # character ť
358:'\\={T}',   # character Ŧ
359:'\\={t}',   # character ŧ
360:'\\~{U}',   # character Ũ
361:'\\~{u}',   # character ũ
362:'\\={U}',   # character Ū
363:'\\={u}',   # character ū
364:'\\u{U}',   # character Ŭ
365:'\\u{u}',   # character ŭ
366:'\\r{U}',   # character Ů
367:'\\r{u}',   # character ů
368:'\\H{U}',   # character Ű
369:'\\H{u}',   # character ű
370:'\\k{U}',   # character Ų
371:'\\k{u}',   # character ų
372:'\\^{W}',   # character Ŵ
373:'\\^{w}',   # character ŵ
374:'\\^{Y}',   # character Ŷ
375:'\\^{y}',   # character ŷ
376:'\\"Y',     # character Ÿ
377:"\\'Z",     # character Ź
378:"\\'z",     # character ź
379:'\\.Z',     # character Ż
380:'\\.z',     # character ż
381:'\\v{Z}',   # character Ž
382:'\\v{z}',   # character ž
#383: character ſ
# ------------------- U+0180 — U+024F Latin Extended-B -------------------
402:'\\textflorin', # character ƒ
# these characters seems to be duplicates, but since the unicode
# is supported in classic, shall be supported here as well
461:'\\v{A}',   # character Ǎ
462:'\\v{a}',   # character ǎ
463:'\\v{I}',   # character Ǐ
464:'\\v{i}',   # character ǐ
465:'\\v{O}',   # character Ǒ
466:'\\v{o}',   # character ǒ
467:'\\v{U}',   # character Ǔ
468:'\\v{u}',   # character ǔ
486:'\\v{G}',   # character Ǧ
487:'\\v{g}',   # character ǧ
488:'\\v{K}',   # character Ǩ
489:'\\v{k}',   # character ǩ
490:'\\c{O}',   # character Ǫ
491:'\\c{o}',   # character ǫ
496:'\\v{j}',   # character ǰ
500:"\\'{G}",   # character Ǵ
501:"\\'{g}",   # character ǵ
504:"\\`{N}",   # character Ǹ
505:"\\`{n}",   # character ǹ
# Romanian charset: 536-539
536:'\\textcommabelow S',   # character Ș
537:'\\textcommabelow s',   # character ș
538:'\\textcommabelow T',   # character Ț
539:'\\textcommabelow t',   # character ț
#
542:'\\v{H}',   # character Ȟ
543:'\\v{h}',   # character ȟ
550:'\\.{A}',   # character Ȧ
551:'\\.{a}',   # character ȧ
552:'\\c{E}',   # character Ȩ
553:'\\c{e}',   # character ȩ
558:'\\.{O}',   # character Ȯ
559:'\\.{o}',   # character ȯ
562:'\\={Y}',   # character Ȳ
563:'\\={y}',   # character ȳ
# ------------------- U+02B0 — U+02FF Spacing Modifier Letters -------------------
710:'\\textasciicircum',    # character ˆ
711:'\\textasciicaron',     # character ˇ
728:'\\textasciibreve',     # character ˘
730:'\\textringaccent',     # character ˚
731:'\\textogonek',         # character ˛
732:'\\textasciitilde',     # character ˜
733:'\\textacutedbl',       # character ˝
# ------------------- U+0400 — U+04FF Cyrillic -------------------
1024:'\\`\\CYRE',   # character Ѐ
1025:'\\CYRYO',     # character Ё
1026:'\\CYRDJE',    # character Ђ
1027:'\\`\\CYRG',   # character Ѓ
1028:'\\CYRIE',     # character Є
1029:'\\CYRDZE',    # character Ѕ
1030:'\\CYRII',     # character І
1031:'\\CYRYI',     # character Ї
1032:'\\CYRJE',     # character Ј
1033:'\\CYRLJE',    # character Љ
1034:'\\CYRNJE',    # character Њ
1035:'\\CYRTSHE',   # character Ћ
1036:'\\`\\CYRK',   # character Ќ
1037:'\\`\\CYRI',   # character Ѝ
1038:'\\CYRUSHRT',  # character Ў
1039:'\\CYRDZHE',   # character Џ
1040:'\\CYRA',      # character А
1041:'\\CYRB',      # character Б
1042:'\\CYRV',      # character В
1043:'\\CYRG',      # character Г
1044:'\\CYRD',      # character Д
1045:'\\CYRE',      # character Е
1046:'\\CYRZH',     # character Ж
1047:'\\CYRZ',      # character З
1048:'\\CYRI',      # character И
1049:'\\CYRISHRT',  # character Й
1050:'\\CYRK',      # character К
1051:'\\CYRL',      # character Л
1052:'\\CYRM',      # character М
1053:'\\CYRN',      # character Н
1054:'\\CYRO',      # character О
1055:'\\CYRP',      # character П
1056:'\\CYRR',      # character Р
1057:'\\CYRS',      # character С
1058:'\\CYRT',      # character Т
1059:'\\CYRU',      # character У
1060:'\\CYRF',      # character Ф
1061:'\\CYRH',      # character Х
1062:'\\CYRC',      # character Ц
1063:'\\CYRCH',     # character Ч
1064:'\\CYRSH',     # character Ш
1065:'\\CYRSHCH',   # character Щ
1066:'\\CYRHRDSN',  # character Ъ
1067:'\\CYRERY',    # character Ы
1068:'\\CYRSFTSN',  # character Ь
1069:'\\CYREREV',   # character Э
1070:'\\CYRYU',     # character Ю
1071:'\\CYRYA',     # character Я
1072:'\\cyra',      # character а
1073:'\\cyrb',      # character б
1074:'\\cyrv',      # character в
1075:'\\cyrg',      # character г
1076:'\\cyrd',      # character д
1077:'\\cyre',      # character е
1078:'\\cyrzh',     # character ж
1079:'\\cyrz',      # character з
1080:'\\cyri',      # character и
1081:'\\cyrishrt',  # character й
1082:'\\cyrk',      # character к
1083:'\\cyrl',      # character л
1084:'\\cyrm',      # character м
1085:'\\cyrn',      # character н
1086:'\\cyro',      # character о
1087:'\\cyrp',      # character п
1088:'\\cyrr',      # character р
1089:'\\cyrs',      # character с
1090:'\\cyrt',      # character т
1091:'\\cyru',      # character у
1092:'\\cyrf',      # character ф
1093:'\\cyrh',      # character х
1094:'\\cyrc',      # character ц
1095:'\\cyrch',     # character ч
1096:'\\cyrsh',     # character ш
1097:'\\cyrshch',   # character щ
1098:'\\cyrhrdsn',  # character ъ
1099:'\\cyrery',    # character ы
1100:'\\cyrsftsn',  # character ь
1101:'\\cyrerev',   # character э
1102:'\\cyryu',     # character ю
1103:'\\cyrya',     # character я
1104:'\\`\\cyre',   # character ѐ
1105:'\\cyryo',     # character ё
1106:'\\cyrdje',    # character ђ
1107:'\\`\\cyrg',   # character ѓ
1108:'\\cyrie',     # character є
1109:'\\cyrdze',    # character ѕ
1110:'\\cyrii',     # character і
1111:'\\cyryi',     # character ї
1112:'\\cyrje',     # character ј
1113:'\\cyrlje',    # character љ
1114:'\\cyrnje',    # character њ
1115:'\\cyrtshe',   # character ћ
1116:'\\`\\cyrk',   # character ќ
1117:'\\`\\cyri',   # character ѝ
1118:'\\cyrushrt',  # character ў
1119:'\\cyrdzhe',   # character џ
1122:'\\CYRYAT',    # character Ѣ
1123:'\\cyryat',    # character ѣ
1130:'\\CYRBYUS',   # character Ѫ
1131:'\\cyrbyus',   # character ѫ
1138:'\\CYRFITA',   # character Ѳ
1139:'\\cyrfita',   # character ѳ
1140:'\\CYRIZH',    # character Ѵ
1141:'\\cyrizh',    # character ѵ
1142:'\\C\\CYRIZH', # character Ѷ
1143:'\\C\\cyrizh', # character ѷ
1164:'\\CYRSEMISFTSN',     # character Ҍ
1165:'\\cyrsemisftsn',     # character ҍ
1166:'\\CYRRTICK',  # character Ҏ
1167:'\\cyrrtick',  # character ҏ
1168:'\\CYRGUP',    # character Ґ
1169:'\\cyrgup',    # character ґ
1170:'\\CYRGHCRS',  # character Ғ
1171:'\\cyrghcrs',  # character ғ
1172:'\\CYRGHK',    # character Ҕ
1173:'\\cyrghk',    # character ҕ
1174:'\\CYRZHDSC',  # character Җ
1175:'\\cyrzhdsc',  # character җ
1176:'\\CYRZDSC',   # character Ҙ
1177:'\\cyrzdsc',   # character ҙ
1178:'\\CYRKDSC',   # character Қ
1179:'\\cyrkdsc',   # character қ
1180:'\\CYRKVCRS',  # character Ҝ
1181:'\\cyrkvcrs',  # character ҝ
1182:'\\CYRKHCRS',  # character Ҟ
1183:'\\cyrkhcrs',  # character ҟ
1184:'\\CYRKBEAK',  # character Ҡ
1185:'\\cyrkbeak',  # character ҡ
1186:'\\CYRNDSC',   # character Ң
1187:'\\cyrndsc',   # character ң
1188:'\\CYRNG',     # character Ҥ
1189:'\\cyrng',     # character ҥ
1190:'\\CYRPHK',    # character Ҧ
1191:'\\cyrphk',    # character ҧ
1192:'\\CYRABHHA',  # character Ҩ
1193:'\\cyrabhha',  # character ҩ
1194:'\\CYRSDSC',   # character Ҫ
1195:'\\cyrsdsc',   # character ҫ
1196:'\\CYRTDSC',   # character Ҭ
1197:'\\cyrtdsc',   # character ҭ
1198:'\\CYRY',      # character Ү
1199:'\\cyry',      # character ү
1200:'\\CYRYHCRS',  # character Ұ
1201:'\\cyryhcrs',  # character ұ
1202:'\\CYRHDSC',   # character Ҳ
1203:'\\cyrhdsc',   # character ҳ
1204:'\\CYRTETSE',  # character Ҵ
1205:'\\cyrtetse',  # character ҵ
1206:'\\CYRCHRDSC', # character Ҷ
1207:'\\cyrchrdsc', # character ҷ
1208:'\\CYRCHVCRS', # character Ҹ
1209:'\\cyrchvcrs', # character ҹ
1210:'\\CYRSHHA',   # character Һ
1211:'\\cyrshha',   # character һ
1212:'\\CYRABHCH',  # character Ҽ
1213:'\\cyrabhch',  # character ҽ
1214:'\\CYRABHCHDSC',     # character Ҿ
1215:'\\cyrabhchdsc',     # character ҿ
1216:'\\CYRpalochka',     # character Ӏ
1217:'\\U\\CYRZH',  # character Ӂ
1218:'\\U\\cyrzh',  # character ӂ
1219:'\\CYRKHK',    # character Ӄ
1220:'\\cyrkhk',    # character ӄ
1221:'\\CYRLDSC',   # character Ӆ
1222:'\\cyrldsc',   # character ӆ
1223:'\\CYRNHK',    # character Ӈ
1224:'\\cyrnhk',    # character ӈ
1227:'\\CYRCHLDSC', # character Ӌ
1228:'\\cyrchldsc', # character ӌ
1229:'\\CYRMDSC',   # character Ӎ
1230:'\\cyrmdsc',   # character ӎ
1232:'\\U\\CYRA',   # character Ӑ
1233:'\\U\\cyra',   # character ӑ
1234:'\\"\\CYRA',   # character Ӓ
1235:'\\"\\cyra',   # character ӓ
1236:'\\CYRAE',     # character Ӕ
1237:'\\cyrae',     # character ӕ
1238:'\\U\\CYRE',   # character Ӗ
1239:'\\U\\cyre',   # character ӗ
1240:'\\CYRSCHWA',  # character Ә
1241:'\\cyrschwa',  # character ә
1242:'\\"\\CYRSCHWA',     # character Ӛ
1243:'\\"\\cyrschwa',     # character ӛ
1244:'\\"\\CYRZH',  # character Ӝ
1245:'\\"\\cyrzh',  # character ӝ
1246:'\\"\\CYRZ',   # character Ӟ
1247:'\\"\\cyrz',   # character ӟ
1248:'\\CYRABHDZE', # character Ӡ
1249:'\\cyrabhdze', # character ӡ
1250:'\\=\\CYRI',     # character Ӣ
1251:'\\=\\cyri',     # character ӣ
1252:'\\"\\CYRI',     # character Ӥ
1253:'\\"\\cyri',     # character ӥ
1254:'\\"\\CYRO',     # character Ӧ
1255:'\\"\\cyro',     # character ӧ
1256:'\\CYROTLD',     # character Ө
1257:'\\cyrotld',     # character ө
#1258: character Ӫ
#1259: character ӫ
1260:'\\"\\CYREREV',  # character Ӭ
1261:'\\"\\cyrerev',  # character ӭ
1262:'\\=\\CYRU',     # character Ӯ
1263:'\\=\\cyru',     # character ӯ
1264:'\\"\\CYRU',     # character Ӱ
1265:'\\"\\cyru',     # character ӱ
1266:'\\H\\CYRU',     # character Ӳ
1267:'\\H\\cyru',     # character ӳ
1268:'\\"\\CYRCH',    # character Ӵ
1269:'\\"\\cyrch',    # character ӵ
1270:'\\CYRGDSC',     # character Ӷ
1271:'\\cyrgdsc',     # character ӷ
1272:'\\"\\CYRERY',   # character Ӹ
1273:'\\"\\cyrery',   # character ӹ
1274:'\\CYRGDSCHCRS',     # character Ӻ
1275:'\\cyrgdschcrs',     # character ӻ
1276:'\\CYRHHK',      # character Ӽ
1277:'\\cyrhhk',      # character ӽ
1278:'\\CYRHHCRS',    # character Ӿ
1279:'\\cyrhhcrs',    # character ӿ

3647:'\\textbaht',

8204:'\\textcompwordmark',
8211:'\\textendash',
8212:'\\textemdash',
8214:'\\textbardbl',
8216:'\\textquoteleft',
8217:'\\textquoteright',
8218:'\\quotesinglbase',
8220:'\\textquotedblleft',
8221:'\\textquotedblright',
8222:'\\quotedblbase',
8224:'\\textdagger',
8225:'\\textdaggerdbl',
8226:'\\textbullet',
8230:'\\textellipsis',
8240:'\\textperthousand',
8241:'\\textpertenthousand',
8249:'\\guilsinglleft',
8250:'\\guilsinglright',
8251:'\\textreferencemark',
8253:'\\textinterrobang',
8260:'\\textfractionsolidus',
8270:'\\textasteriskcentered',
8274:'\\textdiscount',
8353:'\\textcolonmonetary',
8356:'\\textlira',
8358:'\\textnaira',
8361:'\\textwon',
8363:'\\textdong',
8364:'\\texteuro',
8369:'\\textpeso',
8451:'\\textcelsius',
8470:'\\textnumero',
8471:'\\textcircledP',
8478:'\\textrecipe',
8480:'\\textservicemark',
8482:'\\texttrademark',
8486:'\\textohm',
8487:'\\textmho',
8494:'\\textestimated',
8592:'\\textleftarrow',
8593:'\\textuparrow',
8594:'\\textrightarrow',
8595:'\\textdownarrow',
9001:'\\textlangle',
9002:'\\textrangle',
9250:'\\textblank',
9251:'\\textvisiblespace',
9702:'\\textopenbullet',
9711:'\\textbigcircle',
9834:'\\textmusicalnote',


# ADDED MANUALLY (PhF):
# ---------------------

0x02BC: r"'", # MODIFIER LETTER APOSTROPHE

# Combining Diacritical Marks (!!TODO!! smarter)
0x0307: r'\ensuremath{\dot{}}',
0x0308: r'\ensuremath{\ddot{}}',

0x0391: r'A', # GREEK CAPITAL LETTER ALPHA
0x0392: r'B', # GREEK CAPITAL LETTER BETA
0x0393: r'\ensuremath{\Gamma}', # GREEK CAPITAL LETTER GAMMA
0x0394: r'\ensuremath{\Delta}', # ...
0x0395: r'E',
0x0396: r'Z',
0x0397: r'H',
0x0398: r'\ensuremath{\Theta}',
0x0399: r'I',
0x039A: r'K',
0x039B: r'\ensuremath{\Lambda}',
0x039C: r'M',
0x039D: r'N',
0x039E: r'\ensuremath{\Xi}',
0x039F: r'O',
0x03A0: r'\ensuremath{\Pi}',
0x03A1: r'P',
0x03A3: r'\ensuremath{\Sigma}',
0x03A4: r'T',
0x03A5: r'\ensuremath{\Upsilon}',
0x03A6: r'\ensuremath{\Phi}',
0x03A7: r'X',
0x03A8: r'\ensuremath{\Psi}',
0x03A9: r'\ensuremath{\Omega}',
# tonos letters [ ... ]
0x03B1: r'\ensuremath{\alpha}', # Greek Small Letter Alpha
0x03B2: r'\ensuremath{\beta}',
0x03B3: r'\ensuremath{\gamma}',
0x03B4: r'\ensuremath{\delta}',
0x03B5: r'\ensuremath{\varepsilon}',
0x03B6: r'\ensuremath{\zeta}',
0x03B7: r'\ensuremath{\eta}',
0x03B8: r'\ensuremath{\theta}',
0x03B9: r'\ensuremath{\i}',
0x03BA: r'\ensuremath{\kappa}',
0x03BB: r'\ensuremath{\lambda}',
0x03BC: r'\ensuremath{\mu}',
0x03BD: r'\ensuremath{\nu}',
0x03BE: r'\ensuremath{\xi}',
0x03BF: r'o',
0x03C0: r'\ensuremath{\pi}',
0x03C1: r'\ensuremath{\rho}',
0x03C2: r'\ensuremath{\varsigma}',
0x03C3: r'\ensuremath{\sigma}',
0x03C4: r'\ensuremath{\tau}',
0x03C5: r'\ensuremath{\upsilon}',
0x03C6: r'\ensuremath{\varphi}',
0x03C7: r'\ensuremath{\chi}',
0x03C8: r'\ensuremath{\psi}',
0x03C9: r'\ensuremath{\omega}',


0x03D1: r'\ensuremath{\vartheta}', # Greek Theta Symbol
0x03D5: r'\ensuremath{\phi}', # Greek Phi Symbol
0x03D6: r'\ensuremath{\varpi}', # Greek Pi Symbol
0x03F1: r'\ensuremath{\varrho}', # Greek rho symbol

# spaces
0x2000: r'\enskip', # EN QUAD (= EN SPACE U+2002)
0x2001: r'\quad', # EM QUAD (= EM SPACE U+2003)
0x2002: r'\enskip', # EN SPACE
0x2003: r'\quad', # EM SPACE
0x2004: r'\hspace{0.33em}', # THREE-PER-EM SPACE
0x2005: r'\hsapce{0.25em}', # FOUR-PER-EM SPACE
0x2006: r'\hspace{0.167em}', # SIX-PER-EM SPACE
0x2007: r'~', # FIGURE SPACE
0x2008: r'\;', # PUNCTUATION SPACE
0x2009: r'\,', # thin space
0x200A: r'\hspace{1pt}', # supposed to be thinnest typographical space available

0x2010: r'-', # HYPHEN
0x2061: r'', # FUNCTION APPLICATION

0x210F: r'\ensuremath{\hbar}', # h bar
0x2113: r'\ensuremath{\ell}', # SCRIPT SMALL L

# Math operators and symbols (U+22XX)
0x2200: r'\ensuremath{\forall}',
0x2201: r'\ensuremath{\complement}',
0x2202: r'\ensuremath{\partial}',
0x2203: r'\ensuremath{\exists}',
0x2204: r'\ensuremath{\nexists}',
0x2205: r'\ensuremath{\varnothing}',
0x2206: r'\ensuremath{\Delta}',
0x2207: r'\ensuremath{\nabla}',
0x2208: r'\ensuremath{\in}',
0x2209: r'\ensuremath{\notin}',
0x220A: r'\ensuremath{\in}', # alternative
0x220B: r'\ensuremath{\ni}',
0x220C: r'\ensuremath{\not\ni}',
0x220D: r'\ensuremath{\ni}', # alternative
0x220E: r'\ensuremath{\blacksquare}',
0x220F: r'\ensuremath{\prod}',
0x2210: r'\ensuremath{\coprod}',
0x2211: r'\ensuremath{\sum}',
0x2212: r'\ensuremath{-}',
0x2213: r'\ensuremath{\mp}',
#0x2214: DOT PLUS
0x2215: r'\ensuremath{/}',
0x2216: r'\ensuremath{\smallsetminus}',
0x2217: r'\ensuremath{*}',
0x2218: r'\ensuremath{\circ}',
0x2219: r'\ensuremath{\bullet}',
0x221A: r'\ensuremath{\sqrt{}}',
0x221B: r'\ensuremath{\sqrt[3]{}}',
0x221C: r'\ensuremath{\sqrt[4]{}}',
0x221D: r'\ensuremath{\propto}',
0x221E: r'\ensuremath{\infty}',
#0x221F: RIGHT ANGLE
#0x2220: ANGLE
#0x2221: MEASURED ANGLE
#0x2222: SPHERICAL ANGLE
0x2223: r'\ensuremath{\mid}',
0x2224: r'\ensuremath{\nmid}',
0x2225: r'\ensuremath{\parallel}',
0x2226: r'\ensuremath{\nparallel}',
0x2227: r'\ensuremath{\wedge}',
0x2228: r'\ensuremath{\vee}',
0x2229: r'\ensuremath{\cap}',
0x222A: r'\ensuremath{\cup}',
0x222B: r'\ensuremath{\int}',
0x222C: r'\ensuremath{\iint}',
0x222D: r'\ensuremath{\iiint}',
0x222E: r'\ensuremath{\oint}',
#0x222F: SURFACE INTEGRAL
#0x2230: VOLUME INTEGRAL
#0x2231: CLOCKWISE INTEGRAL
#0x2232: CLOCKWIZSE CONTOUR INTEGRAL
#0x2233: ANTICLOCKWISE CONTOUR INTEGRAL
0x2234: r'\ensuremath{\therefore}',
0x2235: r'\ensuremath{\because}',
0x2236: r'\ensuremath{:}',
0x2237: r'\ensuremath{::}',
#0x2238: DOT MINUS
#...
0x223C: r'\ensuremath{\sim}',
0x223D: r'\ensuremath{\backsim}',
#
0x2248: r'\ensuremath{\approx}',
#
0x2260: r'\ensuremath{\neq}',
0x2261: r'\ensuremath{\equiv}',
0x2262: r'\ensuremath{\not\equiv}',
#0x2263: STRICTLY EQUIVALENT TO
0x2264: r'\ensuremath{\leq}',
0x2265: r'\ensuremath{\geq}',
0x2266: r'\ensuremath{\leqq}',
0x2267: r'\ensuremath{\geqq}',
0x2268: r'\ensuremath{\lneqq}',
0x2269: r'\ensuremath{\gneqq}',
0x226A: r'\ensuremath{\ll}',
0x226B: r'\ensuremath{\gg}',
#0x226C: BETWEEN
#0x226D: NOT EQUIVLAENT TO
0x226E: r'\ensuremath{\nless}',
0x226F: r'\ensuremath{\ngtr}',
0x2270: r'\ensuremath{\nleq}',
0x2271: r'\ensuremath{\ngeq}',
0x2272: r'\ensuremath{\lesssim}',
0x2273: r'\ensuremath{\gtrsim}',
0x2274: r'\ensuremath{\not\lesssim}',
0x2275: r'\ensuremath{\not\gtrsim}',
0x2276: r'\ensuremath{\lessgtr}',
0x2277: r'\ensuremath{\gtrless}',
#0x2278: NEITHER LESS-THAN NOR GREATER-THAN
#0x2279: NEITHER GREATER-THAN NOR LESS-THAN
0x227A: r'\ensuremath{\prec}',
0x227B: r'\ensuremath{\succ}',
0x227C: r'\ensuremath{\preceq}',
0x227D: r'\ensuremath{\succeq}',
0x227E: r'\ensuremath{\precsim}',
0x227F: r'\ensuremath{\succsim}',
0x2280: r'\ensuremath{\nprec}',
0x2281: r'\ensuremath{\nsucc}',
0x2282: r'\ensuremath{\subset}',
0x2283: r'\ensuremath{\supset}',
0x2284: r'\ensuremath{\not\subset}',
0x2285: r'\ensuremath{\not\supset}',
0x2286: r'\ensuremath{\subseteq}',
0x2287: r'\ensuremath{\supseteq}',
0x2288: r'\ensuremath{\nsubseteq}',
0x2289: r'\ensuremath{\nsupseteq}',
0x228A: r'\ensuremath{\subsetneq}',
0x228B: r'\ensuremath{\supsetneq}',
#...
0x2293: r'\ensuremath{\sqcap}',
0x2294: r'\ensuremath{\sqcup}',
0x2295: r'\ensuremath{\oplus}',
0x2296: r'\ensuremath{\ominus}',
0x2297: r'\ensuremath{\otimes}',
0x2298: r'\ensuremath{\oslash}',
0x2299: r'\ensuremath{\odot}',
# ...
0x22C0: r'\ensuremath{\bigwedge}',
0x22C1: r'\ensuremath{\bigvee}',
0x22C2: r'\ensuremath{\bigcap}',
0x22C3: r'\ensuremath{\bigcup}',
0x22C4: r'\ensuremath{\diamond}',
0x22C5: r'\ensuremath{\cdot}',
0x22C6: r'\ensuremath{\star}',
0x22C7: r'\ensuremath{\divideontimes}',
0x22C8: r'\ensuremath{\bowtie}',
0x22C9: r'\ensuremath{\ltimes}',
0x22CA: r'\ensuremath{\rtimes}',
0x22CB: r'\ensuremath{\leftthreetimes}',
0x22CC: r'\ensuremath{\rightthreetimes}',
# ...
0x22EE: r'\ensuremath{\vdots}',
0x22EF: r'\ensuremath{\cdots}',
0x22F0: r'\ensuremath{\udots}',
0x22F1: r'\ensuremath{\ddots}',
# ...

# Supplemental Mathematical Operators U+2AXX
0x2A7D: r'\ensuremath{\leqslant}',
0x2A7E: r'\ensuremath{\geqslant}',

# CJK Symbols Punktuation (!) U+3000 : for \langle/\rangle
0x3008: r'\ensuremath{\langle}',
0x3009: r'\ensuremath{\rangle}',

# ligatures
0xFB00: r'ff', # LATIN SMALL LIGATURE FF
0xFB01: r'fi', # LATIN SMALL LIGATURE FI
0xFB02: r'fl', # LATIN SMALL LIGATURE FL
0xFB03: r'ffi', # LATIN SMALL LIGATURE FFI
0xFB04: r'ffl', # LATIN SMALL LIGATURE FFL

}


# ------------------------------------------------------------------------------------------------




def utf8tolatex(s, non_ascii_only=False, brackets=True, substitute_bad_chars=False, ascii_no_brackets=False):
    u"""
    Encode a UTF-8 string to a LaTeX snippet.

    If `non_ascii_only` is set to `True`, then usual (ascii) characters such as ``#``,
    ``{``, ``}`` etc. will not be escaped.  If set to `False` (the default), they are
    escaped to their respective LaTeX escape sequences.

    If `brackets` is set to `True` (the default), then LaTeX macros are enclosed in
    brackets.  For example, ``sant\N{LATIN SMALL LETTER E WITH ACUTE}`` is replaced by
    ``sant{\\'e}`` if `brackets=True` and by ``sant\\'e`` if `brackets=False`.

    .. warning::
        Using `brackets=False` might give you an invalid LaTeX string, so avoid
        it! (for instance, ``ma\N{LATIN SMALL LETTER I WITH CIRCUMFLEX}tre`` will be
        replaced incorrectly by ``ma\\^\\itre`` resulting in an unknown macro ``\\itre``).

    If `substitute_bad_chars=True`, then any non-ascii character for which no LaTeX escape
    sequence is known is replaced by a question mark in boldface. Otherwise (by default),
    the character is left as it is.
    """

    s = unicode(s) # make sure s is unicode
    s = unicodedata.normalize('NFC', s)

    if not s:
        return ""

    result = u""
    for ch in s:
        #log.longdebug("Encoding char %r", ch)
        # 8/8/2018 escape non ascii and no bracket
        if (ascii_no_brackets and ord(ch) < 127):
            result += utf82latex.get(ord(ch), ch)
        elif (non_ascii_only and ord(ch) < 127):
            result += ch
        else:
            lch = utf82latex.get(ord(ch), None)
            if (lch is not None):
                # add brackets if needed, i.e. if we have a substituting macro.
                # note: in condition, beware, that lch might be of zero length.
                result += (  '{'+lch+'}' if brackets and lch[0:1] == '\\' else
                             lch  )
            elif ((ord(ch) >= 32 and ord(ch) <= 127) or
                  (ch in "\n\r\t")):
                # ordinary printable ascii char, just add it
                result += ch
            else:
                # non-ascii char
                log.warning(u"Character cannot be encoded into LaTeX: U+%04X - `%s'" % (ord(ch), ch))
                if (substitute_bad_chars):
                    result += r'{\bfseries ?}'
                else:
                    # keep unescaped char
                    result += ch

    return result



if __name__ == '__main__':      # pragma: no cover

    try:

        # create console handler and set level to debug
        ch = logging.StreamHandler()
        ch.setLevel(logging.DEBUG)
        log.addHandler(ch)

        import fileinput

        print("Please type some unicode text (Ctrl+D twice to stop) ...")

        latex = ''
        for line in fileinput.input():
            latex += line

        print('\n--- LATEX ---\n')
        print(utf8tolatex(latex.decode('utf-8')).encode('utf-8'))
        print('\n-------------\n')

    except:
        import pdb
        import sys
        print("\nEXCEPTION: " + unicode(sys.exc_info()[1]) + "\n")
        pdb.post_mortem()
